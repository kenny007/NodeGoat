name: Generate SBOM and Upload to Dependency-Track

on: [push, pull_request]

jobs:
  sbom-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Syft & Grype
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin
          curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin

      - name: Download Previous SBOM (if exists)
        uses: actions/download-artifact@v4
        with:
          name: nodegoat-sboms
          path: previous_sbom
        continue-on-error: true

      - name: Generate SBOMs (CycloneDX JSON & XML)
        run: |
          syft dir:. -o cyclonedx-json --catalogers all --scope all-layers > sbom-cyclonedx.json
          syft dir:. -o cyclonedx-xml --catalogers all --scope all-layers > sbom-cyclonedx.xml

      - name: Diff SBOMs (if previous exists)
        run: |
          if [ -f previous_sbom/sbom-cyclonedx.json ]; then
            cyclonedx diff --input-files previous_sbom/sbom-cyclonedx.json sbom-cyclonedx.json --input-format json
          else
            echo "No previous SBOM to diff against."
          fi

      - name: Diff SBOMs (if previous exists)
        run: |
          if [ -f previous_sbom/sbom-cyclonedx.json ]; then
            cyclonedx diff --input-files previous_sbom/sbom-cyclonedx.json sbom-cyclonedx.json --input-format json
          else
            echo "No previous SBOM to diff against."
          fi

      - name: Decode Private Key
        run: |
          echo "${{ secrets.SBOM_PRIVATE_KEY }}" | base64 -d > private.key

      - name: Install CycloneDX CLI
        run: |
          curl -sSL -o cyclonedx https://github.com/CycloneDX/cyclonedx-cli/releases/download/v0.25.0/cyclonedx-linux-x64
          chmod +x cyclonedx
          sudo mv cyclonedx /usr/local/bin/cyclonedx

      - name: Sign SBOM (CycloneDX XML)
        run: |
          cyclonedx sign bom sbom-cyclonedx.xml --key-file=private.key

      - name: Install Go and SBOM Scorecard from Source
        run: |
          sudo apt-get update && sudo apt-get install -y golang
          git clone https://github.com/eBay/sbom-scorecard.git
          cd sbom-scorecard
          go build -o sbom-scorecard ./cmd/sbom-scorecard
          sudo mv sbom-scorecard /usr/local/bin/

      - name: Evaluate SBOM Quality
        run: sbom-scorecard score sbom-cyclonedx.xml

      - name: Scan with Grype for Vulnerabilities
        run: grype sbom:sbom-cyclonedx.json || echo "Vulnerabilities found, but continuing"

      - name: Upload CycloneDX JSON SBOM to Dependency-Track
        env:
          DTRACK_API_KEY: ${{ secrets.DTRACK_API_KEY }}
          DTRACK_BASE_URL: ${{ secrets.DTRACK_BASE_URL }}
        run: |
          echo "Uploading SBOM to $DTRACK_BASE_URL/api/api/v1/bom"
          curl -v -X POST "$DTRACK_BASE_URL/api/api/v1/bom" \
            -H "X-Api-Key: $DTRACK_API_KEY" \
            -H "Content-Type: multipart/form-data" \
            -F "projectName=nodegoat" \
            -F "projectVersion=1.0.0" \
            -F "autoCreate=true" \
            -F "bom=@sbom-cyclonedx.json"

      - name: Upload SBOM Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nodegoat-sboms
          path: |
            sbom-cyclonedx.xml
            sbom-cyclonedx.json

      - name: Generate Provenance (SLSA-style attestation)
        run: |
          echo '{
            "builder": "github-actions",
            "buildType": "https://slsa.dev/types/github-actions",
            "buildConfig": {
              "repo": "${{ github.repository }}",
              "commit": "${{ github.sha }}",
              "workflow": "${{ github.workflow }}",
              "run_id": "${{ github.run_id }}"
            }
          }' > provenance.json

      - name: Upload Provenance
        uses: actions/upload-artifact@v4
        with:
          name: provenance
          path: provenance.json