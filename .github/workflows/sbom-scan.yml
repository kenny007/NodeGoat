name: Generate SBOM and Upload to Dependency-Track

on: [push, pull_request]

jobs:
  sbom-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Syft & Grype
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin
          curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin

      - name: Generate SBOM (CycloneDX format)
        run: syft dir:. -o cyclonedx-json > sbom-cyclonedx.json

      - name: Decode Private Key
        run: |
          echo "${{ secrets.SBOM_PRIVATE_KEY }}" | base64 -d > private.key
      
      - name: Install CycloneDX CLI
        run: |
          wget https://github.com/CycloneDX/cyclonedx-cli/releases/download/v0.25.0/cyclonedx-linux-x64
          mv cyclonedx-linux-x64 cyclonedx-cli
          chmod +x cyclonedx-cli
      
      - name: Sign SBOM (CycloneDX)
        run: |
          ./cyclonedx-cli sign bom sbom-cyclonedx.json --key-file=private.key

      - name: Scan with Grype for Vulnerabilities
        run: grype sbom:sbom-cyclonedx.json || echo "Vulnerabilities found, but continuing"

      - name: Upload CycloneDX SBOM to Dependency-Track Test
        env:
          DTRACK_API_KEY: ${{ secrets.DTRACK_API_KEY }}
          DTRACK_BASE_URL: ${{ secrets.DTRACK_BASE_URL }}
        run: |
          echo "Uploading SBOM to $DTRACK_BASE_URL/api/api/v1/bom"
          curl -v -X POST "$DTRACK_BASE_URL/api/api/v1/bom" \
            -H "X-Api-Key: $DTRACK_API_KEY" \
            -H "Content-Type: multipart/form-data" \
            -F "projectName=nodegoat" \
            -F "projectVersion=1.0.0" \
            -F "autoCreate=true" \
            -F "bom=@sbom-cyclonedx.json"

      - name: Upload SBOM Artifact
        uses: actions/upload-artifact@v4
        with:
          name: nodegoat-sbom
          path: sbom-cyclonedx.json
